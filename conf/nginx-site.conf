server {
	listen   80; ## listen for ipv4; this line is default and implied
	listen   [::]:80 default ipv6only=on; ## listen for ipv6

	root /var/www/html;
	index index.html index.htm;

	# Make site accessible from http://localhost/
	server_name _;

    if ($host ~* ^www\.(.*)) {
        set $host_without_www $1;
        rewrite ^(.*) https://$host_without_www$1 permanent;
    }

    set $do_https X;
    if ( $non_local_ip_range ) {
        set $do_https P;
    }

    if ( $http_x_forwarded_proto != 'https' ) {
        set $do_https "${do_https}C";
    }

    if ( $do_https = PC ) {
        return 301 https://$host$request_uri;
    }

    location / {
            try_files $uri $uri/ =404;
    }

    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Container-Name $hostname always;
    add_header Cache-Control "immutable" always;

    location ~* \.(eot|ttf|woff)$ { add_header Access-Control-Allow-Origin '*'; }

    error_page 404 /404.html;
    location = /404.html {
            root /var/www/errors;
            internal;
    }

    location ^~ /healthz {
        access_log off;
    }

    location ^~ /readiness {
        access_log off;
    }

	location ~ /\. {
    		log_not_found off;
    		deny all;
	}

	location ^~ /.well-known {
		allow all;
		auth_basic off;
	}

    location ~* /frontend/(\d+)\.html {
        try_files $uri /frontend/index.html;
    }

    location ~* /(\d+)\.html {
        try_files $uri /index.html;
    }

    location ~ index.html {
        expires -1;
        add_header Cache-Control no-cache always;
    }

    location ~* /frontend/(.*)\.(?:css|js|png|woff2|svg|html|json|wav|woff|ttf|eot|jpg|jpeg|txt|map)$ {
        try_files $uri @missing2;
        expires 1y;
        access_log off;
    }

    location ~* \.(?:css|js|png|woff2|svg|html|json|wav|woff|ttf|eot|jpg|jpeg|txt|map)$ {
        try_files $uri @missing;
        expires 1y;
        access_log off;
    }

    location @missing {
        expires -1;
        add_header Cache-Control no-cache always;
        rewrite ^/(\d+)/(.*)$ /latest/$2?$args break;
        return 404;
    }

    location @missing2 {
        expires -1;
        add_header Cache-Control no-cache always;
        rewrite ^/frontend/(\d+)/(.*)$ /frontend/latest/$2?$args break;
        return 404;
    }
}
